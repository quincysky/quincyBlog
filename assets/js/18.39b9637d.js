(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{431:function(_,t,v){"use strict";v.r(t);var a=v(2),r=Object(a.a)({},(function(){var _=this,t=_._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"默克尔树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#默克尔树"}},[_._v("#")]),_._v(" 默克尔树")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/44364449",target:"_blank",rel:"noopener noreferrer"}},[_._v("知乎链接"),t("OutboundLink")],1)]),_._v(" "),t("h2",{attrs:{id:"以太坊"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以太坊"}},[_._v("#")]),_._v(" 以太坊")]),_._v(" "),t("p",[_._v("以太坊的目的是创建一个用于建立去中心化应用的替代协议，我们认为提供一套不同的折衷方案对大量去中心化应用非常有用，尤其是那些强调快速开发、小型和不常用应用的安全性，以及应用间高效交互能力的程序。")]),_._v(" "),t("p",[_._v("以太坊通过构建本质上是最终的抽象基础层来实现这一点：一种内置图灵完备编程语言的区块链，允许任何人编写智能合约和去中心化应用，并在其中设立它们自由定义的所有权规则、交易方式和状态转移函数。")]),_._v(" "),t("p",[_._v("以太坊虚拟机是图灵完备的，这意味着以太坊虚拟机代码可以对任何设想可执行的计算进行编码，包括无限循环。")]),_._v(" "),t("h2",{attrs:{id:"以太坊账户"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以太坊账户"}},[_._v("#")]),_._v(" 以太坊账户")]),_._v(" "),t("p",[_._v("以太币是以太坊内部的主要加密燃料，用于支付交易费。通常有两类账户：由私钥控制的"),t("strong",[_._v("外部账户")]),_._v("以及由其合约代码控制的"),t("strong",[_._v("合约账户")]),_._v("。外部账户没有代码，持有者可以通过创建和签署交易从外部账户发送消息；在合约账户中，每次合约账户收到消息时，其代码都会激活，允许该账户读取和写入内部存储，继而发送其他消息和创建合约。")]),_._v(" "),t("h2",{attrs:{id:"消息和交易"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息和交易"}},[_._v("#")]),_._v(" 消息和交易")]),_._v(" "),t("p",[_._v("在以太坊中，"),t("strong",[_._v("交易")]),_._v("用来指代已签名的数据包，数据包存储着将要从外部账户发送的消息。")]),_._v(" "),t("p",[_._v("合约能够向其他合约发送"),t("strong",[_._v("消息")]),_._v("。消息是从未序列化的虚拟对象，只存在于以太坊执行环境中。")]),_._v(" "),t("p",[_._v("本质上消息类似于交易，只是消息是由合约而非外部参与者产生的。")]),_._v(" "),t("h2",{attrs:{id:"区块链和挖矿"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#区块链和挖矿"}},[_._v("#")]),_._v(" 区块链和挖矿")]),_._v(" "),t("p",[_._v("以太坊的基本区块验证算法：")]),_._v(" "),t("ol",[t("li",[_._v("检查被引用的前一个区块是否存在并有效")]),_._v(" "),t("li",[_._v("检查区块的时间戳是否大于被引用的前一个区块的时间戳，并且在将来15分钟以内。")]),_._v(" "),t("li",[_._v("检查区块编号、难度、交易根、叔根和燃料限制(各种以太坊特定的低级概念)是否有效。")]),_._v(" "),t("li",[_._v("检查区块上的工作量证明是否有效。")]),_._v(" "),t("li",[_._v("令前一个区块末尾的态为S[0]")]),_._v(" "),t("li",[_._v("令区块的交易列表为 TX，并包含 n 笔交易。 对于 0...n-1 中的所有 i，设置 S[i+1] = APPLY(S[i],TX[i])。 如果任何应用程序返回错误，或者直到此时区块中消耗的总燃料量超过 GASLIMIT，则返回错误。")]),_._v(" "),t("li",[_._v("令 S_FINAL 为 S[n]，但添加支付给矿工的区块奖励。")]),_._v(" "),t("li",[_._v("检查状态 S_FINAL 的默克尔树根是否等于区块头中提供的最终状态根。 如果等于，则该区块有效；否则该区块无效。")])]),_._v(" "),t("h2",{attrs:{id:"挖矿中心化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#挖矿中心化"}},[_._v("#")]),_._v(" 挖矿中心化")]),_._v(" "),t("p",[_._v("比特币挖矿算法的原理是，让矿工一次又一次地对区块头稍作修改的版本进行数百万次SHA256计算，直到最终某个节点所产生版本的哈希小于目标值。然而，这种挖矿算法容易遭受两种形式的中心化攻击。 第一种，挖矿生态系统已经被 ASIC（专用集成电路）所支配，这些计算机芯片专门为特定的比特币挖矿任务而设计，因此效率提高了数千倍。 这意味着比特币挖矿不再是一种高度去中心化和平等的事业，需要巨额资本才能有效参与。 第二种，大部分比特币矿工事实上不在本地完成区块验证；而是依赖中心化矿池提供区块头。 这个问题可以说更糟：截至撰写本文时，排名前三的矿池间接控制了比特币网络中大约 50% 的处理能力，尽管当矿池或联盟试图进行 51％ 攻击时，矿工可以转换到其他矿池这一事实缓解了该问题。")]),_._v(" "),t("p",[_._v("以太坊现在的目的是使用一种挖掘算法，要求矿工从状态中获取随机数据，从区块链的最后 N 个区块中计算一些随机选择的交易，并返回结果的哈希值。 这有两个重要好处。 首先，以太坊合约可以包含任何类型的计算，因此以太坊 ASIC 本质上是用于一般计算的 ASIC，即更好的 CPU。 其次，挖矿需要访问整个区块链，这迫使矿工存储整个区块链并至少能够验证每笔交易。 这样就消除了对中心化矿池的需求；虽然矿池仍然可以起到平衡奖励分配随机性的合法作用，但没有中心化控制的点对点矿池同样也可以很好地发挥此功能。")])])}),[],!1,null,null,null);t.default=r.exports}}]);